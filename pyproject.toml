[build-system]
build-backend = "flit_core.buildapi"
requires = [
    "flit_core >=3.4,<4",
    "setuptools_scm",
]

[project]
name = "anndata"
description = "Annotated data."
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
    {name = "Philipp Angerer"},
    {name = "Alex Wolf"},
    {name = "Isaac Virshup"},
    {name = "Sergei Rybakov"},
]
maintainers = [
    {name = "Isaac Virshup", email = "ivirshup@gmail.com"},
    {name = "Philipp Angerer", email = "philipp.angerer@helmholtz-muenchen.de"},
    {name = "Alex Wolf", email = "f.alex.wolf@gmx.de"},
]
readme = {file = "README.rst", content-type="text/x-rst"}
classifiers = [
    "License :: OSI Approved :: BSD License",
    "Environment :: Console",
    "Framework :: Jupyter",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Visualization",
]
dependencies = [
    "pandas>=1.1.1",  # pandas <1.1.1 has pandas/issues/35446
    "numpy>=1.16.5",  # required by pandas 1.x
    "scipy>1.4",
    "h5py>=3",
    "natsort",
    "packaging>=20",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://anndata.readthedocs.io/"
Source = "https://github.com/scverse/anndata"
Home-page = "https://github.com/scverse/anndata"


[project.optional-dependencies]
dev = [
    # dev version generation
    "setuptools_scm",
    # static checking
    "black>=20.8b1",
    "docutils",
]
doc = [
    "sphinx>=4.4",
    "sphinx-rtd-theme>=1.1.1",
    "sphinx-autodoc-typehints>=1.11.0",
    "sphinx_issues",
    "nbsphinx",
    "scanpydoc>=0.7.7",
    "zarr",
    "awkward>=2.0.7",
    "IPython", # For syntax highlighting in notebooks
    "myst_parser",
]
test = [
    "loompy>=3.0.5",
    "pytest>=6.0",
    "pytest-cov>=2.10",
    "zarr",
    "matplotlib",
    "scikit-learn",
    "openpyxl",
    "joblib",
    "boltons",
    "scanpy",
    "dask[array]",
    "awkward>=2.0.6",
    "pytest_memray",
]

[tool.flit.sdist]
exclude = [
    'anndata/tests/test_*.py',
    'anndata/tests/data',
]

[tool.coverage.run]
source = ["anndata"]
omit = [
	"setup.py",
	"versioneer.py",
	"anndata/_version.py",
	"**/test_*.py",
]

[tool.pytest.ini_options]
addopts = "--doctest-modules"
python_files = "test_*.py"
testpaths = ["anndata", "docs/concatenation.rst"]
filterwarnings = [
    'ignore:X\.dtype being converted to np.float32:FutureWarning'
]
# For some reason this effects how logging is shown when tests are run
xfail_strict = true

[tool.black]
line-length = 88
target-version = ["py38"]
exclude = "^/build/.*$"

[tool.ruff]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "docs/_build",
    "dist",
]
ignore = [
    # module imported but unused -> required for Scanpys API
    "F401",
    # line too long -> we accept long comment lines; black gets rid of long code lines
    "E501",
    # module level import not at top of file -> required to circumvent circular imports for Scanpys API
    "E402",
    # Do not assign a lambda expression, use a def -> Scanpy allows lambda expression assignments,
    "E731",
    # allow I, O, l as variable names -> I is the identity matrix, i, j, k, l is reasonable indexing notation
    "E741",
    ## Flake8 rules not supported by ruff:
    # line break before a binary operator -> black does not adhere to PEP8
    # "W503",
    # line break occured after a binary operator -> black does not adhere to PEP8
    # "W504",
    # whitespace before : -> black does not adhere to PEP8
    # "E203",
    # missing whitespace after ,', ';', or ':' -> black does not adhere to PEP8
    # "E231",
    # continuation line over-indented for hanging indent -> black does not adhere to PEP8
    # "E126",
    # too many leading '# ' for block comment -> Scanpy allows them for comments into sections
    # "E262",
    # inline comment should start with '#' -> Scanpy allows them for specific explanations
    # "E266",
]
line-length = 88
select = [
    "E",
    "F",
    "W",
]
[tool.ruff.per-file-ignores]
# E721 comparing types, but we specifically are checking that we aren't getting subtypes (views)
"anndata/tests/test_readwrite.py" = ["E721"]
# F811 Redefinition of unused name from line, does not play nice with pytest fixtures
"tests/test*.py" = ["F811"]
# F821 Undefined name, can't import AnnData or it'd be a circular import
"anndata/compat/_overloaded_dict.py" = ["F821"]
