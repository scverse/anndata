[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]

[project]
name = "anndata"
description = "Annotated data."
requires-python = ">=3.9"
license = "BSD-3-Clause"
authors = [
    { name = "Philipp Angerer" },
    { name = "Alex Wolf" },
    { name = "Isaac Virshup" },
    { name = "Sergei Rybakov" },
]
maintainers = [
    { name = "Isaac Virshup", email = "ivirshup@gmail.com" },
    { name = "Philipp Angerer", email = "philipp.angerer@helmholtz-munich.de" },
    { name = "Alex Wolf", email = "f.alex.wolf@gmx.de" },
]
readme = "README.md"
classifiers = [
    "Environment :: Console",
    "Framework :: Jupyter",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Visualization",
]
dependencies = [
    # pandas <1.4 has pandas/issues/35446
    # pandas 2.1.0rc0 has pandas/issues/54622
    "pandas >=1.4, !=2.1.0rc0, !=2.1.2",
    "numpy>=1.23",
    # https://github.com/scverse/anndata/issues/1434
    "scipy >1.8",
    "h5py>=3.1",
    "exceptiongroup; python_version<'3.11'",
    "natsort",
    "packaging>=20.0",
    "pint",
    # array-api-compat 1.5 has https://github.com/scverse/anndata/issues/1410
    "array_api_compat>1.4,!=1.5",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://anndata.readthedocs.io/"
Source = "https://github.com/scverse/anndata"
Home-page = "https://github.com/scverse/anndata"


[project.optional-dependencies]
dev = [
    # dev version generation
    "setuptools_scm",
    # test speedups
    "pytest-xdist",
]
doc = [
    "sphinx>=4.4",
    "sphinx-book-theme>=1.1.0",
    "sphinx-autodoc-typehints>=1.11.0",
    "sphinx-issues",
    "sphinx-copybutton",
    "sphinxext.opengraph",
    "nbsphinx",
    "scanpydoc[theme,typehints] >=0.13.4",
    "zarr",
    "awkward>=2.0.7",
    "IPython",                          # For syntax highlighting in notebooks
    "myst_parser",
    "sphinx_design>=0.5.0",
    "readthedocs-sphinx-search",
]
test = [
    "loompy>=3.0.5",
    "pytest>=8.0",
    "pytest-cov>=2.10",
    "zarr",
    "matplotlib",
    "scikit-learn",
    "openpyxl",
    "joblib",
    "boltons",
    "scanpy",
    "httpx", # For data downloading
    "dask[array,distributed]>=2022.09.2",
    "awkward>=2.3",
    "pyarrow",
    "pytest_memray",
    "pytest-mock"
]
gpu = ["cupy"]

[tool.hatch.build]
exclude = [
    "src/anndata/tests/conftest.py",
    "src/anndata/tests/test_*.py",
    "src/anndata/tests/data",
]
[tool.hatch.version]
source = "vcs"
[tool.hatch.build.hooks.vcs]
version-file = "src/anndata/_version.py"

[tool.coverage.run]
source_pkgs = ["anndata"]
omit = ["src/anndata/_version.py", "**/test_*.py"]
[tool.coverage.paths]
source = ["./src", "**/site-packages"]

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
]

[tool.pytest.ini_options]
addopts = [
    # "--import-mode=importlib",  # TODO: enable: https://github.com/scverse/anndata/issues/1451
    "--strict-markers",
    "--doctest-modules",
    "--pyargs",
]
filterwarnings = [
    'ignore:Support for Awkward Arrays is currently experimental',
    'ignore:Outer joins on awkward\.Arrays',
    # TODO: replace both lines above with this one once we figured out how prevent ImportPathMismatchError
    # 'ignore::anndata._warnings.ExperimentalFeatureWarning',
]
# When `--strict-warnings` is used, all warnings are treated as errors, except those:
filterwarnings_when_strict = [
    "default::anndata._warnings.ImplicitModificationWarning",
    "default:Transforming to str index:UserWarning",
    "default:(Observation|Variable) names are not unique. To make them unique:UserWarning",
    "default::scipy.sparse.SparseEfficiencyWarning",
    "default::dask.array.core.PerformanceWarning",
]
python_files = "test_*.py"
testpaths = [
    "anndata", # docstrings and unit tests (module name due to --pyargs)
    "./docs/concatenation.rst", # further doctests
]
# For some reason this effects how logging is shown when tests are run
xfail_strict = true
markers = ["gpu: mark test to run on GPU"]

[tool.ruff]
src = ["src"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "E",   # Error detected by Pycodestyle
    "F",   # Errors detected by Pyflakes
    "W",   # Warning detected by Pycodestyle
    "UP",  # pyupgrade
    "I",   # isort
    "TCH", # manage type checking blocks
    "ICN", # Follow import conventions
    "PTH", # Pathlib instead of os.path
]
ignore = [
    # line too long -> we accept long comment lines; formatter gets rid of long code lines
    "E501",
    # Do not assign a lambda expression, use a def -> AnnData allows lambda expression assignments,
    "E731",
    # allow I, O, l as variable names -> I is the identity matrix, i, j, k, l is reasonable indexing notation
    "E741",
]
[tool.ruff.lint.per-file-ignores]
# E721 comparing types, but we specifically are checking that we aren't getting subtypes (views)
"src/anndata/tests/test_readwrite.py" = ["E721"]
[tool.ruff.lint.isort]
known-first-party = ["anndata"]
required-imports = ["from __future__ import annotations"]

[tool.codespell]
skip = ".git,*.pdf,*.svg"
ignore-words-list = "theis,coo,homogenous"
